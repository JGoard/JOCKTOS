ARM GAS  C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"system_stm32f3xx.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SystemInit,"ax",%progbits
  20              		.align	1
  21              		.global	SystemInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	SystemInit:
  27              	.LFB123:
  28              		.file 1 "Src/system_stm32f3xx.c"
   1:Src/system_stm32f3xx.c **** /**
   2:Src/system_stm32f3xx.c ****   ******************************************************************************
   3:Src/system_stm32f3xx.c ****   * @file    system_stm32f3xx.c
   4:Src/system_stm32f3xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32f3xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   6:Src/system_stm32f3xx.c ****   *
   7:Src/system_stm32f3xx.c ****   * 1. This file provides two functions and one global variable to be called from
   8:Src/system_stm32f3xx.c ****   *    user application:
   9:Src/system_stm32f3xx.c ****   *      - SystemInit(): This function is called at startup just after reset and 
  10:Src/system_stm32f3xx.c ****   *                      before branch to main program. This call is made inside
  11:Src/system_stm32f3xx.c ****   *                      the "startup_stm32f3xx.s" file.
  12:Src/system_stm32f3xx.c ****   *
  13:Src/system_stm32f3xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Src/system_stm32f3xx.c ****   *                                  by the user application to setup the SysTick
  15:Src/system_stm32f3xx.c ****   *                                  timer or configure other parameters.
  16:Src/system_stm32f3xx.c ****   *
  17:Src/system_stm32f3xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Src/system_stm32f3xx.c ****   *                                 be called whenever the core clock is changed
  19:Src/system_stm32f3xx.c ****   *                                 during program execution.
  20:Src/system_stm32f3xx.c ****   *
  21:Src/system_stm32f3xx.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  22:Src/system_stm32f3xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f3xx.s" file, to
  23:Src/system_stm32f3xx.c ****   *    configure the system clock before to branch to main program.
  24:Src/system_stm32f3xx.c ****   *
  25:Src/system_stm32f3xx.c ****   * 3. This file configures the system clock as follows:
  26:Src/system_stm32f3xx.c ****   *=============================================================================
  27:Src/system_stm32f3xx.c ****   *                         Supported STM32F3xx device
  28:Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  29:Src/system_stm32f3xx.c ****   *        System Clock source                    | HSI
  30:Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
ARM GAS  C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s 			page 2


  31:Src/system_stm32f3xx.c ****   *        SYSCLK(Hz)                             | 8000000
  32:Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  33:Src/system_stm32f3xx.c ****   *        HCLK(Hz)                               | 8000000
  34:Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  35:Src/system_stm32f3xx.c ****   *        AHB Prescaler                          | 1
  36:Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  37:Src/system_stm32f3xx.c ****   *        APB2 Prescaler                         | 1
  38:Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  39:Src/system_stm32f3xx.c ****   *        APB1 Prescaler                         | 1
  40:Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  41:Src/system_stm32f3xx.c ****   *        USB Clock                              | DISABLE
  42:Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  43:Src/system_stm32f3xx.c ****   *=============================================================================
  44:Src/system_stm32f3xx.c ****   ******************************************************************************
  45:Src/system_stm32f3xx.c ****   * @attention
  46:Src/system_stm32f3xx.c ****   *
  47:Src/system_stm32f3xx.c ****   * Copyright (c) 2016 STMicroelectronics.
  48:Src/system_stm32f3xx.c ****   * All rights reserved.
  49:Src/system_stm32f3xx.c ****   *
  50:Src/system_stm32f3xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  51:Src/system_stm32f3xx.c ****   * in the root directory of this software component.
  52:Src/system_stm32f3xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  53:Src/system_stm32f3xx.c ****   *
  54:Src/system_stm32f3xx.c ****   ******************************************************************************
  55:Src/system_stm32f3xx.c ****   */
  56:Src/system_stm32f3xx.c **** 
  57:Src/system_stm32f3xx.c **** /** @addtogroup CMSIS
  58:Src/system_stm32f3xx.c ****   * @{
  59:Src/system_stm32f3xx.c ****   */
  60:Src/system_stm32f3xx.c **** 
  61:Src/system_stm32f3xx.c **** /** @addtogroup stm32f3xx_system
  62:Src/system_stm32f3xx.c ****   * @{
  63:Src/system_stm32f3xx.c ****   */
  64:Src/system_stm32f3xx.c **** 
  65:Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_Includes
  66:Src/system_stm32f3xx.c ****   * @{
  67:Src/system_stm32f3xx.c ****   */
  68:Src/system_stm32f3xx.c **** 
  69:Src/system_stm32f3xx.c **** #include "stm32f3xx.h"
  70:Src/system_stm32f3xx.c **** 
  71:Src/system_stm32f3xx.c **** /**
  72:Src/system_stm32f3xx.c ****   * @}
  73:Src/system_stm32f3xx.c ****   */
  74:Src/system_stm32f3xx.c **** 
  75:Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_TypesDefinitions
  76:Src/system_stm32f3xx.c ****   * @{
  77:Src/system_stm32f3xx.c ****   */
  78:Src/system_stm32f3xx.c **** 
  79:Src/system_stm32f3xx.c **** /**
  80:Src/system_stm32f3xx.c ****   * @}
  81:Src/system_stm32f3xx.c ****   */
  82:Src/system_stm32f3xx.c **** 
  83:Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_Defines
  84:Src/system_stm32f3xx.c ****   * @{
  85:Src/system_stm32f3xx.c ****   */
  86:Src/system_stm32f3xx.c **** #if !defined  (HSE_VALUE) 
  87:Src/system_stm32f3xx.c ****   #define HSE_VALUE    ((uint32_t)8000000) /*!< Default value of the External oscillator in Hz.
ARM GAS  C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s 			page 3


  88:Src/system_stm32f3xx.c ****                                                 This value can be provided and adapted by the user 
  89:Src/system_stm32f3xx.c **** #endif /* HSE_VALUE */
  90:Src/system_stm32f3xx.c **** 
  91:Src/system_stm32f3xx.c **** #if !defined  (HSI_VALUE)
  92:Src/system_stm32f3xx.c ****   #define HSI_VALUE    ((uint32_t)8000000) /*!< Default value of the Internal oscillator in Hz.
  93:Src/system_stm32f3xx.c ****                                                 This value can be provided and adapted by the user 
  94:Src/system_stm32f3xx.c **** #endif /* HSI_VALUE */
  95:Src/system_stm32f3xx.c **** 
  96:Src/system_stm32f3xx.c **** /* Note: Following vector table addresses must be defined in line with linker
  97:Src/system_stm32f3xx.c ****          configuration. */
  98:Src/system_stm32f3xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
  99:Src/system_stm32f3xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
 100:Src/system_stm32f3xx.c ****      remap of boot address selected */
 101:Src/system_stm32f3xx.c **** /* #define USER_VECT_TAB_ADDRESS */
 102:Src/system_stm32f3xx.c **** 
 103:Src/system_stm32f3xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 104:Src/system_stm32f3xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 105:Src/system_stm32f3xx.c ****      in Sram else user remap will be done in Flash. */
 106:Src/system_stm32f3xx.c **** /* #define VECT_TAB_SRAM */
 107:Src/system_stm32f3xx.c **** #if defined(VECT_TAB_SRAM)
 108:Src/system_stm32f3xx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM_BASE       /*!< Vector Table base address field.
 109:Src/system_stm32f3xx.c ****                                                      This value must be a multiple of 0x200. */
 110:Src/system_stm32f3xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 111:Src/system_stm32f3xx.c ****                                                      This value must be a multiple of 0x200. */
 112:Src/system_stm32f3xx.c **** #else
 113:Src/system_stm32f3xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 114:Src/system_stm32f3xx.c ****                                                      This value must be a multiple of 0x200. */
 115:Src/system_stm32f3xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 116:Src/system_stm32f3xx.c ****                                                      This value must be a multiple of 0x200. */
 117:Src/system_stm32f3xx.c **** #endif /* VECT_TAB_SRAM */
 118:Src/system_stm32f3xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 119:Src/system_stm32f3xx.c **** 
 120:Src/system_stm32f3xx.c **** /******************************************************************************/
 121:Src/system_stm32f3xx.c **** /**
 122:Src/system_stm32f3xx.c ****   * @}
 123:Src/system_stm32f3xx.c ****   */
 124:Src/system_stm32f3xx.c **** 
 125:Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_Macros
 126:Src/system_stm32f3xx.c ****   * @{
 127:Src/system_stm32f3xx.c ****   */
 128:Src/system_stm32f3xx.c **** 
 129:Src/system_stm32f3xx.c **** /**
 130:Src/system_stm32f3xx.c ****   * @}
 131:Src/system_stm32f3xx.c ****   */
 132:Src/system_stm32f3xx.c **** 
 133:Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_Variables
 134:Src/system_stm32f3xx.c ****   * @{
 135:Src/system_stm32f3xx.c ****   */
 136:Src/system_stm32f3xx.c ****   /* This variable is updated in three ways:
 137:Src/system_stm32f3xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 138:Src/system_stm32f3xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 139:Src/system_stm32f3xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 140:Src/system_stm32f3xx.c ****          Note: If you use this function to configure the system clock there is no need to
 141:Src/system_stm32f3xx.c ****                call the 2 first functions listed above, since SystemCoreClock variable is 
 142:Src/system_stm32f3xx.c ****                updated automatically.
 143:Src/system_stm32f3xx.c ****   */
 144:Src/system_stm32f3xx.c **** uint32_t SystemCoreClock = 8000000;
ARM GAS  C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s 			page 4


 145:Src/system_stm32f3xx.c **** 
 146:Src/system_stm32f3xx.c **** const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 147:Src/system_stm32f3xx.c **** const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 148:Src/system_stm32f3xx.c **** 
 149:Src/system_stm32f3xx.c **** /**
 150:Src/system_stm32f3xx.c ****   * @}
 151:Src/system_stm32f3xx.c ****   */
 152:Src/system_stm32f3xx.c **** 
 153:Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_FunctionPrototypes
 154:Src/system_stm32f3xx.c ****   * @{
 155:Src/system_stm32f3xx.c ****   */
 156:Src/system_stm32f3xx.c **** 
 157:Src/system_stm32f3xx.c **** /**
 158:Src/system_stm32f3xx.c ****   * @}
 159:Src/system_stm32f3xx.c ****   */
 160:Src/system_stm32f3xx.c **** 
 161:Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_Functions
 162:Src/system_stm32f3xx.c ****   * @{
 163:Src/system_stm32f3xx.c ****   */
 164:Src/system_stm32f3xx.c **** 
 165:Src/system_stm32f3xx.c **** /**
 166:Src/system_stm32f3xx.c ****   * @brief  Setup the microcontroller system
 167:Src/system_stm32f3xx.c ****   * @param  None
 168:Src/system_stm32f3xx.c ****   * @retval None
 169:Src/system_stm32f3xx.c ****   */
 170:Src/system_stm32f3xx.c **** void SystemInit(void)
 171:Src/system_stm32f3xx.c **** {
  29              		.loc 1 171 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 172:Src/system_stm32f3xx.c **** /* FPU settings --------------------------------------------------------------*/
 173:Src/system_stm32f3xx.c **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 174:Src/system_stm32f3xx.c ****   SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  34              		.loc 1 174 3 view .LVU1
  35              		.loc 1 174 14 is_stmt 0 view .LVU2
  36 0000 034A     		ldr	r2, .L2
  37 0002 D2F88830 		ldr	r3, [r2, #136]
  38 0006 43F47003 		orr	r3, r3, #15728640
  39 000a C2F88830 		str	r3, [r2, #136]
 175:Src/system_stm32f3xx.c **** #endif
 176:Src/system_stm32f3xx.c **** 
 177:Src/system_stm32f3xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 178:Src/system_stm32f3xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 179:Src/system_stm32f3xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM 
 180:Src/system_stm32f3xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 181:Src/system_stm32f3xx.c **** }
  40              		.loc 1 181 1 view .LVU3
  41 000e 7047     		bx	lr
  42              	.L3:
  43              		.align	2
  44              	.L2:
  45 0010 00ED00E0 		.word	-536810240
  46              		.cfi_endproc
  47              	.LFE123:
  49              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
ARM GAS  C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s 			page 5


  50              		.align	1
  51              		.global	SystemCoreClockUpdate
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  56              	SystemCoreClockUpdate:
  57              	.LFB124:
 182:Src/system_stm32f3xx.c **** 
 183:Src/system_stm32f3xx.c **** /**
 184:Src/system_stm32f3xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 185:Src/system_stm32f3xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 186:Src/system_stm32f3xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 187:Src/system_stm32f3xx.c ****   *         other parameters.
 188:Src/system_stm32f3xx.c ****   *
 189:Src/system_stm32f3xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 190:Src/system_stm32f3xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 191:Src/system_stm32f3xx.c ****   *         based on this variable will be incorrect.
 192:Src/system_stm32f3xx.c ****   *
 193:Src/system_stm32f3xx.c ****   * @note   - The system frequency computed by this function is not the real
 194:Src/system_stm32f3xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 195:Src/system_stm32f3xx.c ****   *           constant and the selected clock source:
 196:Src/system_stm32f3xx.c ****   *
 197:Src/system_stm32f3xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 198:Src/system_stm32f3xx.c ****   *
 199:Src/system_stm32f3xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 200:Src/system_stm32f3xx.c ****   *
 201:Src/system_stm32f3xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**)
 202:Src/system_stm32f3xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 203:Src/system_stm32f3xx.c ****   *
 204:Src/system_stm32f3xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f3xx_hal.h file (default value
 205:Src/system_stm32f3xx.c ****   *             8 MHz) but the real value may vary depending on the variations
 206:Src/system_stm32f3xx.c ****   *             in voltage and temperature.
 207:Src/system_stm32f3xx.c ****   *
 208:Src/system_stm32f3xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f3xx_hal.h file (default value
 209:Src/system_stm32f3xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 210:Src/system_stm32f3xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 211:Src/system_stm32f3xx.c ****   *              have wrong result.
 212:Src/system_stm32f3xx.c ****   *
 213:Src/system_stm32f3xx.c ****   *         - The result of this function could be not correct when using fractional
 214:Src/system_stm32f3xx.c ****   *           value for HSE crystal.
 215:Src/system_stm32f3xx.c ****   *
 216:Src/system_stm32f3xx.c ****   * @param  None
 217:Src/system_stm32f3xx.c ****   * @retval None
 218:Src/system_stm32f3xx.c ****   */
 219:Src/system_stm32f3xx.c **** void SystemCoreClockUpdate (void)
 220:Src/system_stm32f3xx.c **** {
  58              		.loc 1 220 1 is_stmt 1 view -0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 221:Src/system_stm32f3xx.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, predivfactor = 0;
  63              		.loc 1 221 3 view .LVU5
  64              	.LVL0:
 222:Src/system_stm32f3xx.c **** 
 223:Src/system_stm32f3xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 224:Src/system_stm32f3xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
ARM GAS  C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s 			page 6


  65              		.loc 1 224 3 view .LVU6
  66              		.loc 1 224 12 is_stmt 0 view .LVU7
  67 0000 1D4B     		ldr	r3, .L11
  68 0002 5B68     		ldr	r3, [r3, #4]
  69              		.loc 1 224 7 view .LVU8
  70 0004 03F00C03 		and	r3, r3, #12
  71              	.LVL1:
 225:Src/system_stm32f3xx.c **** 
 226:Src/system_stm32f3xx.c ****   switch (tmp)
  72              		.loc 1 226 3 is_stmt 1 view .LVU9
  73 0008 042B     		cmp	r3, #4
  74 000a 14D0     		beq	.L5
  75 000c 082B     		cmp	r3, #8
  76 000e 16D0     		beq	.L6
  77 0010 1BB1     		cbz	r3, .L10
 227:Src/system_stm32f3xx.c ****   {
 228:Src/system_stm32f3xx.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock */
 229:Src/system_stm32f3xx.c ****       SystemCoreClock = HSI_VALUE;
 230:Src/system_stm32f3xx.c ****       break;
 231:Src/system_stm32f3xx.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock */
 232:Src/system_stm32f3xx.c ****       SystemCoreClock = HSE_VALUE;
 233:Src/system_stm32f3xx.c ****       break;
 234:Src/system_stm32f3xx.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock */
 235:Src/system_stm32f3xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 236:Src/system_stm32f3xx.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMUL;
 237:Src/system_stm32f3xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 238:Src/system_stm32f3xx.c ****       pllmull = ( pllmull >> 18) + 2;
 239:Src/system_stm32f3xx.c **** 
 240:Src/system_stm32f3xx.c **** #if defined (STM32F302xE) || defined (STM32F303xE) || defined (STM32F398xx)
 241:Src/system_stm32f3xx.c ****         predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 242:Src/system_stm32f3xx.c ****       if (pllsource == RCC_CFGR_PLLSRC_HSE_PREDIV)
 243:Src/system_stm32f3xx.c ****       {
 244:Src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 245:Src/system_stm32f3xx.c ****         SystemCoreClock = (HSE_VALUE / predivfactor) * pllmull;
 246:Src/system_stm32f3xx.c ****       }
 247:Src/system_stm32f3xx.c ****       else
 248:Src/system_stm32f3xx.c ****       {
 249:Src/system_stm32f3xx.c ****         /* HSI oscillator clock selected as PREDIV1 clock entry */
 250:Src/system_stm32f3xx.c ****         SystemCoreClock = (HSI_VALUE / predivfactor) * pllmull;
 251:Src/system_stm32f3xx.c ****       }
 252:Src/system_stm32f3xx.c **** #else      
 253:Src/system_stm32f3xx.c ****       if (pllsource == RCC_CFGR_PLLSRC_HSI_DIV2)
 254:Src/system_stm32f3xx.c ****       {
 255:Src/system_stm32f3xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 256:Src/system_stm32f3xx.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 257:Src/system_stm32f3xx.c ****       }
 258:Src/system_stm32f3xx.c ****       else
 259:Src/system_stm32f3xx.c ****       {
 260:Src/system_stm32f3xx.c ****         predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 261:Src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 262:Src/system_stm32f3xx.c ****         SystemCoreClock = (HSE_VALUE / predivfactor) * pllmull;
 263:Src/system_stm32f3xx.c ****       }
 264:Src/system_stm32f3xx.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx */
 265:Src/system_stm32f3xx.c ****       break;
 266:Src/system_stm32f3xx.c ****     default: /* HSI used as system clock */
 267:Src/system_stm32f3xx.c ****       SystemCoreClock = HSI_VALUE;
  78              		.loc 1 267 7 view .LVU10
ARM GAS  C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s 			page 7


  79              		.loc 1 267 23 is_stmt 0 view .LVU11
  80 0012 1A4B     		ldr	r3, .L11+4
  81              	.LVL2:
  82              		.loc 1 267 23 view .LVU12
  83 0014 1A4A     		ldr	r2, .L11+8
  84 0016 1A60     		str	r2, [r3]
 268:Src/system_stm32f3xx.c ****       break;
  85              		.loc 1 268 7 is_stmt 1 view .LVU13
  86 0018 02E0     		b	.L8
  87              	.LVL3:
  88              	.L10:
 229:Src/system_stm32f3xx.c ****       break;
  89              		.loc 1 229 7 view .LVU14
 229:Src/system_stm32f3xx.c ****       break;
  90              		.loc 1 229 23 is_stmt 0 view .LVU15
  91 001a 184B     		ldr	r3, .L11+4
  92              	.LVL4:
 229:Src/system_stm32f3xx.c ****       break;
  93              		.loc 1 229 23 view .LVU16
  94 001c 184A     		ldr	r2, .L11+8
  95 001e 1A60     		str	r2, [r3]
 230:Src/system_stm32f3xx.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock */
  96              		.loc 1 230 7 is_stmt 1 view .LVU17
  97              	.LVL5:
  98              	.L8:
 269:Src/system_stm32f3xx.c ****   }
 270:Src/system_stm32f3xx.c ****   /* Compute HCLK clock frequency ----------------*/
 271:Src/system_stm32f3xx.c ****   /* Get HCLK prescaler */
 272:Src/system_stm32f3xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
  99              		.loc 1 272 3 view .LVU18
 100              		.loc 1 272 28 is_stmt 0 view .LVU19
 101 0020 154B     		ldr	r3, .L11
 102 0022 5B68     		ldr	r3, [r3, #4]
 103              		.loc 1 272 52 view .LVU20
 104 0024 C3F30313 		ubfx	r3, r3, #4, #4
 105              		.loc 1 272 22 view .LVU21
 106 0028 164A     		ldr	r2, .L11+12
 107 002a D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 108              	.LVL6:
 273:Src/system_stm32f3xx.c ****   /* HCLK clock frequency */
 274:Src/system_stm32f3xx.c ****   SystemCoreClock >>= tmp;
 109              		.loc 1 274 3 is_stmt 1 view .LVU22
 110              		.loc 1 274 19 is_stmt 0 view .LVU23
 111 002c 134A     		ldr	r2, .L11+4
 112 002e 1368     		ldr	r3, [r2]
 113 0030 CB40     		lsrs	r3, r3, r1
 114 0032 1360     		str	r3, [r2]
 275:Src/system_stm32f3xx.c **** }
 115              		.loc 1 275 1 view .LVU24
 116 0034 7047     		bx	lr
 117              	.LVL7:
 118              	.L5:
 232:Src/system_stm32f3xx.c ****       break;
 119              		.loc 1 232 7 is_stmt 1 view .LVU25
 232:Src/system_stm32f3xx.c ****       break;
 120              		.loc 1 232 23 is_stmt 0 view .LVU26
 121 0036 114B     		ldr	r3, .L11+4
ARM GAS  C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s 			page 8


 122              	.LVL8:
 232:Src/system_stm32f3xx.c ****       break;
 123              		.loc 1 232 23 view .LVU27
 124 0038 114A     		ldr	r2, .L11+8
 125 003a 1A60     		str	r2, [r3]
 233:Src/system_stm32f3xx.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock */
 126              		.loc 1 233 7 is_stmt 1 view .LVU28
 127 003c F0E7     		b	.L8
 128              	.LVL9:
 129              	.L6:
 236:Src/system_stm32f3xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 130              		.loc 1 236 7 view .LVU29
 236:Src/system_stm32f3xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 131              		.loc 1 236 20 is_stmt 0 view .LVU30
 132 003e 0E4A     		ldr	r2, .L11
 133 0040 5368     		ldr	r3, [r2, #4]
 134              	.LVL10:
 237:Src/system_stm32f3xx.c ****       pllmull = ( pllmull >> 18) + 2;
 135              		.loc 1 237 7 is_stmt 1 view .LVU31
 237:Src/system_stm32f3xx.c ****       pllmull = ( pllmull >> 18) + 2;
 136              		.loc 1 237 22 is_stmt 0 view .LVU32
 137 0042 5268     		ldr	r2, [r2, #4]
 138              	.LVL11:
 238:Src/system_stm32f3xx.c **** 
 139              		.loc 1 238 7 is_stmt 1 view .LVU33
 238:Src/system_stm32f3xx.c **** 
 140              		.loc 1 238 27 is_stmt 0 view .LVU34
 141 0044 C3F38343 		ubfx	r3, r3, #18, #4
 142              	.LVL12:
 238:Src/system_stm32f3xx.c **** 
 143              		.loc 1 238 15 view .LVU35
 144 0048 0233     		adds	r3, r3, #2
 145              	.LVL13:
 253:Src/system_stm32f3xx.c ****       {
 146              		.loc 1 253 7 is_stmt 1 view .LVU36
 253:Src/system_stm32f3xx.c ****       {
 147              		.loc 1 253 10 is_stmt 0 view .LVU37
 148 004a 12F4803F 		tst	r2, #65536
 149 004e 05D1     		bne	.L9
 256:Src/system_stm32f3xx.c ****       }
 150              		.loc 1 256 9 is_stmt 1 view .LVU38
 256:Src/system_stm32f3xx.c ****       }
 151              		.loc 1 256 44 is_stmt 0 view .LVU39
 152 0050 0D4A     		ldr	r2, .L11+16
 153              	.LVL14:
 256:Src/system_stm32f3xx.c ****       }
 154              		.loc 1 256 44 view .LVU40
 155 0052 02FB03F3 		mul	r3, r2, r3
 156              	.LVL15:
 256:Src/system_stm32f3xx.c ****       }
 157              		.loc 1 256 25 view .LVU41
 158 0056 094A     		ldr	r2, .L11+4
 159 0058 1360     		str	r3, [r2]
 160 005a E1E7     		b	.L8
 161              	.LVL16:
 162              	.L9:
 260:Src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
ARM GAS  C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s 			page 9


 163              		.loc 1 260 9 is_stmt 1 view .LVU42
 260:Src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 164              		.loc 1 260 28 is_stmt 0 view .LVU43
 165 005c 064A     		ldr	r2, .L11
 166              	.LVL17:
 260:Src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 167              		.loc 1 260 28 view .LVU44
 168 005e D26A     		ldr	r2, [r2, #44]
 260:Src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 169              		.loc 1 260 36 view .LVU45
 170 0060 02F00F02 		and	r2, r2, #15
 260:Src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 171              		.loc 1 260 22 view .LVU46
 172 0064 511C     		adds	r1, r2, #1
 173              	.LVL18:
 262:Src/system_stm32f3xx.c ****       }
 174              		.loc 1 262 9 is_stmt 1 view .LVU47
 262:Src/system_stm32f3xx.c ****       }
 175              		.loc 1 262 38 is_stmt 0 view .LVU48
 176 0066 064A     		ldr	r2, .L11+8
 177 0068 B2FBF1F2 		udiv	r2, r2, r1
 262:Src/system_stm32f3xx.c ****       }
 178              		.loc 1 262 54 view .LVU49
 179 006c 02FB03F3 		mul	r3, r2, r3
 180              	.LVL19:
 262:Src/system_stm32f3xx.c ****       }
 181              		.loc 1 262 25 view .LVU50
 182 0070 024A     		ldr	r2, .L11+4
 183 0072 1360     		str	r3, [r2]
 184 0074 D4E7     		b	.L8
 185              	.L12:
 186 0076 00BF     		.align	2
 187              	.L11:
 188 0078 00100240 		.word	1073876992
 189 007c 00000000 		.word	.LANCHOR0
 190 0080 00127A00 		.word	8000000
 191 0084 00000000 		.word	.LANCHOR1
 192 0088 00093D00 		.word	4000000
 193              		.cfi_endproc
 194              	.LFE124:
 196              		.global	APBPrescTable
 197              		.global	AHBPrescTable
 198              		.global	SystemCoreClock
 199              		.section	.data.SystemCoreClock,"aw"
 200              		.align	2
 201              		.set	.LANCHOR0,. + 0
 204              	SystemCoreClock:
 205 0000 00127A00 		.word	8000000
 206              		.section	.rodata.AHBPrescTable,"a"
 207              		.align	2
 208              		.set	.LANCHOR1,. + 0
 211              	AHBPrescTable:
 212 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 212      00000000 
 212      01020304 
 212      06
 213 000d 070809   		.ascii	"\007\010\011"
ARM GAS  C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s 			page 10


 214              		.section	.rodata.APBPrescTable,"a"
 215              		.align	2
 218              	APBPrescTable:
 219 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 219      01020304 
 220              		.text
 221              	.Letext0:
 222              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 223              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 224              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 225              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 226              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
ARM GAS  C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f3xx.c
C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s:20     .text.SystemInit:00000000 $t
C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s:26     .text.SystemInit:00000000 SystemInit
C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s:45     .text.SystemInit:00000010 $d
C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s:50     .text.SystemCoreClockUpdate:00000000 $t
C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s:56     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s:188    .text.SystemCoreClockUpdate:00000078 $d
C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s:218    .rodata.APBPrescTable:00000000 APBPrescTable
C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s:211    .rodata.AHBPrescTable:00000000 AHBPrescTable
C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s:204    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s:200    .data.SystemCoreClock:00000000 $d
C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s:207    .rodata.AHBPrescTable:00000000 $d
C:\Users\NICHOL~2\AppData\Local\Temp\ccBIXthe.s:215    .rodata.APBPrescTable:00000000 $d

NO UNDEFINED SYMBOLS
